
worker_processes 5;  
  
events {  
    worker_connections 1024;  
}  
  
http {  
    include mime.types;   #include the required MIME types for NGINX  
    keepalive_timeout 65; #connection timeout for worker_processes  
    #default_type application/json;
    sendfile on;

    #Allocated bigger buffers for Identity Server : for k8s -> https://andrewlock.net/fixing-nginx-upstream-sent-too-big-header-error-when-running-an-ingress-controller-in-kubernetes/
    proxy_buffers         8 16k;  # Buffer pool = 8 buffers of 16k
    proxy_buffer_size     16k;    # 16k of buffers from pool used for headers  
    client_max_body_size  16m; # Set maximum body size to 4MB

    upstream walletservice {  
        server wallet:8080;  # Wallet Service
    }

    upstream peerservice {
        server peer:8080; # Peer Service
    }

    upstream registerservice {
        server register:8080; # Register Service
    }
    
    upstream validatorservice {
        server validator:8080; # Validator Service
    }

    upstream actionservice {
        server action:8080; # Action Service
    }

    upstream blueprintservice{
        server blueprint:8080;  # Blueprint Service
    }

    upstream tenantservice{
        server tenant:8080; # Tenant Service
    }

    upstream tenantservicessl{
        server tenant:8443; # Tenant Service
    }

    upstream adminui{
        server adminui:8080; # Admin UI Host
    }
     
    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/ssl/certs/localhost.crt;
        ssl_certificate_key /etc/ssl/private/localhost.key;

        # Required headers for Tenant Service and OIDC
        proxy_set_header        Host                $http_host;
        proxy_http_version      1.1;
        proxy_set_header Upgrade $http_upgrade;
	    proxy_set_header Connection "upgrade";
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto   $scheme;
        proxy_cache_bypass      $http_upgrade;


        location ~* /api/wallets {  
            proxy_pass http://walletservice;  # API Endpoint for walletservice 
        }  
        location ~* /api/PendingTransactions {  
            proxy_pass http://walletservice;  # API Endpoint for walletservice 
        } 
        location /odata/wallets {  
            proxy_pass http://walletservice/api;  # API Endpoint for walletservice 
        }  
        location /wallets/swagger {  
            proxy_pass http://walletservice/swagger;  # API Endpoint for walletservice 
        }  

        location ~* /api/peer {  
            proxy_pass http://peerservice;     
        } 
        location ~* /peerhub {  
            proxy_pass http://peerservice;     
        }
        location /peer/swagger {  
            proxy_pass http://peerservice/swagger;  # API Endpoint for peerservice 
        }  
        
        location ~* /api/registers {  
            proxy_pass http://registerservice;     
        }

        location ~* /registershub {                 # SignalR for Register service
            proxy_http_version      1.1;
            proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
            proxy_pass http://registerservice;     
        }

        location ~* /odata/registers {  
            proxy_pass http://registerservice;  # API Endpoint for walletservice 
        } 
        location /registers/swagger {  
            proxy_pass http://registerservice/swagger;  # OpenAPI Endpoint for registerservice 
        }  

        location ~* /api/validators {  
            proxy_pass http://validatorservice;     
        }  
        location /validators/swagger {  
            proxy_pass http://validatorservice/swagger;  # OpenAPI Endpoint for validatorservice 
        }  
        
        location ~* /api/actions {  
            proxy_pass http://actionservice;     
        }  

        location ~* /api/files {  
            proxy_pass http://actionservice;     
        }  

        location ~* /actionshub {  
            proxy_http_version      1.1;
            proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
            proxy_pass http://actionservice;     
        }


        location /actions/swagger {  
            proxy_pass http://actionservice/swagger;  # OpenAPI Endpoint for actionservice 
        }  

        location ~* /api/blueprints {  
            proxy_pass http://blueprintservice;
        }        
        location /blueprints/swagger {  
            proxy_pass http://blueprintservice/swagger;  # OpenAPI Endpoint for blueprintservice 
        }  

        ######  Tenant Service endpoints
        location ~* /api/tenants {  
            proxy_pass http://tenantservice;   
        }
        location /odata/tenants {  
            proxy_pass http://tenantservice/api;  # API Endpoint for walletservice 
        } 
        location /odata/participants {  
            proxy_pass http://tenantservice;
        } 
        location /tenants/swagger {  
            proxy_pass http://tenantservice/swagger;  # OpenAPI Endpoint for tenantservice 
        }
        location ~* /.well-known {
            proxy_pass http://tenantservice;    # the Identity Server Config point
        }
        location ~* /connect {
            proxy_pass http://tenantservice;    # the Identity Server Config point
        }
        location ~* /authentication {
            proxy_pass http://tenantservice;    # the Identity Server Config point
        }
        location ~* /external {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /account {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /device {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /consent {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /diagnostics {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /home {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /signin-ad {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /css {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /lib {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /js {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /images {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }

        location /api/init { # the tenant botstrap endpoint
            proxy_pass         http://tenantservice;
        }
        
        location ~* /api/users { # the users endpoints
            proxy_pass http://tenantservice;   
        }

        ####### Admin UI - should be hostname option i.e. admin
        location ~* /admin {
            proxy_pass http://adminui; # The adminui host
        }

    }

    server {  
        listen 80;  #port to listen on  
  
        # Required headers for Tenant Service and OIDC
        proxy_set_header        Host                $http_host;
        proxy_http_version      1.1;
        proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto   $scheme;

        location ~* /api/wallets {  
            proxy_pass http://walletservice;  # API Endpoint for walletservice 
        }  
        location ~* /api/PendingTransactions {  
            proxy_pass http://walletservice;  # API Endpoint for walletservice 
        }  
        location /odata/wallets {  
            proxy_pass http://walletservice/api;  # API Endpoint for walletservice 
        }  
        location /wallets/swagger {  
            proxy_pass http://walletservice/swagger;  # API Endpoint for walletservice 
        }  

        location ~* /api/peer {  
            proxy_pass http://peerservice;     
        }
        location ~* /peerhub {  
            proxy_pass http://peerservice;     
        }
        location /peer/swagger {  
            proxy_pass http://peerservice/swagger;  # API Endpoint for peerservice 
        }  
        
        location ~* /api/registers {  
            proxy_pass http://registerservice;     
        }

        location ~* /registershub {                 # SignalR for register service
            proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
            proxy_pass http://registerservice;     
        }

        location ~* /odata/registers {  
            proxy_pass http://registerservice;  # API Endpoint for walletservice 
        } 
        location /registers/swagger {  
            proxy_pass http://registerservice/swagger;  # OpenAPI Endpoint for registerservice 
        }  

        location ~* /api/validators {  
            proxy_pass http://validatorservice;     
        }  
        location /validators/swagger {  
            proxy_pass http://validatorservice/swagger;  # OpenAPI Endpoint for validatorservice 
        }  
        
        location ~* /api/actions {  
            proxy_pass http://actionservice;     
        }

        location ~* /api/files {  
            proxy_pass http://actionservice;     
        }

        location ~* /actionshub {  
            proxy_set_header Upgrade $http_upgrade;
	        proxy_set_header Connection "upgrade";
	        proxy_set_header Host $host;
	        proxy_cache_bypass $http_upgrade;
            proxy_pass http://actionservice;     
        }
        location /actions/swagger {  
            proxy_pass http://actionservice/swagger;  # OpenAPI Endpoint for actionservice 
        }  

        location ~* /api/blueprints {  
            proxy_pass http://blueprintservice;
        }        
        location /blueprints/swagger {  
            proxy_pass http://blueprintservice/swagger;  # OpenAPI Endpoint for blueprintservice 
        }  


        ######  Tenant Service endpoints
        location ~* /api/tenants {  
            proxy_pass http://tenantservice;   
        }
        location /odata/tenants {  
            proxy_pass http://tenantservice/api;   
        }
        location /odata/participants {  
            proxy_pass http://tenantservice;
        } 
        location /tenants/swagger {  
            proxy_pass http://tenantservice/swagger;  # OpenAPI Endpoint for tenantservice 
        }
        location ~* /.well-known {
            proxy_pass http://tenantservice;    # the Identity Server Config point
        }
        location ~* /connect {
            proxy_pass http://tenantservice;    # the Identity Server Config point
        }
        location ~* /authentication {
            proxy_pass http://tenantservice;    # the Identity Server Config point
        }
        location ~* /device {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /external {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /diagnostics {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /consent {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /home {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /account {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /signin-ad {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }

        location ~* /css {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /lib {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }
        location ~* /js {
            proxy_pass http://tenantservice;    # the Identity Server Login point
        }

        location /api/init { # bootstrap endpoint
            proxy_pass         http://tenantservice;
        }

        location ~* /api/users {  
            proxy_pass http://tenantservice;   
        }


        ####### Admin UI - should be hostname option i.e. admin
        location ~* /admin {
            proxy_pass http://adminui; # The adminui host
        }

    }  
}  