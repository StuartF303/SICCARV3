<!-- /*
* Copyright (c) 2024 Siccar (Registered co. Wallet.Services (Scotland) Ltd).
* All rights reserved.
*
* This file is part of a proprietary software product developed by Siccar.
*
* This source code is licensed under the Siccar Proprietary Limited Use License.
* Use, modification, and distribution of this software is subject to the terms
* and conditions of the license agreement. The full text of the license can be
* found in the LICENSE file or at https://github.com/siccar/SICCARV3/blob/main/LICENCE.txt.
*
* Unauthorized use, copying, modification, merger, publication, distribution,
* sublicensing, and/or sale of this software or any part thereof is strictly
* prohibited except as explicitly allowed by the license agreement.
*/ -->

@inherits BaseControl

<!-- DateTime Control -->
<div hidden=@_hidden class="datetime">
    <label for="_id">@_label</label>
    <input type="datetime-local" id="_id" placeholder="@_placeholder" value=@InputDate @onchange="(e) => OnChange(e)" />
    <p>@_description</p>
</div>

@code {
    private string InputDate { get; set; } = System.DateTime.Now.ToString("yyy-MM-ddTHH:mm:ss");

    protected override async Task OnParametersSetAsync()
    {
        if (_id != null)
        {
            var data = (string)dataService.GetFormDataByKey(_id);
            if (data == string.Empty)
            {
                InputDate = System.DateTime.Now.ToString("yyy-MM-ddTHH:mm:ss");
                dataService.UpdateFormData(_id, InputDate);
            }
            else if (data is null)
            {
                await base.OnParametersSetAsync();
            }
            else
            {
                InputDate = data;
            }

            await base.OnParametersSetAsync();
        }
    }

    private void OnChange(ChangeEventArgs eventArgs)
    {
        InputDate = eventArgs.Value.ToString();
        dataService.UpdateFormData(_id, InputDate);
    }
}

